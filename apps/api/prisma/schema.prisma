// apps/api/prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bids      Bid[]
}

model Auction {
  id           String         @id @default(cuid())
  title        String
  vin          String?        @unique
  startsAt     DateTime
  endsAt       DateTime
  softCloseSec Int            @default(120)
  currentPrice Int            @default(0)
  status       AuctionStatus  @default(SCHEDULED)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  // NEW: pochodzenie danych
  source        String    @default("MANUAL") // np. MANUAL | MOCK | COPART | IAAI
  sourceId      String?                // id rekordu u dostawcy
  sourceUrl     String?                // deep link do aukcji u dostawcy
  raw           Json?                  // surowy payload od dostawcy (na debug)


  photos       AuctionPhoto[]   

  bids         Bid[]
  @@index([status])
  @@index([endsAt])
  @@index([endsAt, status(sort: Asc)])
  @@unique([source, sourceId], name: "source_sourceId")
  @@index([title])
  @@index([vin])
}

model AuctionPhoto {
  id        String   @id @default(cuid())
  auctionId String
  url       String   // np. /uploads/abc.jpg
  sort      Int      @default(0)
  createdAt DateTime @default(now())

  auction   Auction  @relation(fields: [auctionId], references: [id], onDelete: Cascade)

  @@index([auctionId, sort])
  @@unique([auctionId, url], map: "auctionId_url")
}

model Bid {
  id        String   @id @default(cuid())
  amount    Int
  createdAt DateTime @default(now())

  userId    String
  auctionId String

  user      User    @relation(fields: [userId], references: [id])
  auction   Auction @relation(fields: [auctionId], references: [id])

  @@index([auctionId, createdAt])
}


enum AuctionStatus {
  SCHEDULED
  LIVE
  ENDED
  CANCELLED
}
