// apps/api/prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  passwordHash String?
  role          Role     @default(USER)

  bids      Bid[]  @relation("UserBids") 
}

model Vehicle {
  id           String   @id @default(cuid())
  vin          String   @unique
  make         String?
  model        String?
  year         Int?
  bodyClass    String?
  vehicleType  String?
  odometer     Int?

  auctions     Auction[]
}

model Auction {
  id           String         @id @default(cuid())
  title        String
  // ✅ vin już NIE jest unique (możesz go chwilowo zostawić, patrz migracja)
  vin          String?
  vehicleId    String?
  vehicle      Vehicle?       @relation(fields: [vehicleId], references: [id])

  startsAt     DateTime
  endsAt       DateTime
  softCloseSec Int            @default(120)
  currentPrice Int            @default(0)
  status       AuctionStatus  @default(SCHEDULED)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  source       String    @default("MANUAL")
  sourceId     String?
  sourceUrl    String?
  raw          Json?

  photos       AuctionPhoto[]
  bids         Bid[]

  @@unique([source, sourceId], name: "source_sourceId")
  @@index([status])
  @@index([endsAt])
  @@index([startsAt])
  @@index([createdAt])
  @@index([currentPrice])
  // opcjonalnie:
  @@index([vin])
}

model AuctionPhoto {
  id        String   @id @default(cuid())
  auctionId String
  url       String   // np. /uploads/abc.jpg
  sort      Int      @default(0)
  createdAt DateTime @default(now())

  auction   Auction  @relation(fields: [auctionId], references: [id], onDelete: Cascade)

  @@index([auctionId, sort])
  @@unique([auctionId, url], map: "auctionId_url")
}

model Bid {
  id        String   @id @default(cuid())
  amount    Int
  createdAt DateTime @default(now())

  userId    String
  auctionId String

  user      User    @relation(fields: [userId], references: [id], name: "UserBids")
  auction   Auction @relation(fields: [auctionId], references: [id])

  @@index([auctionId, createdAt])
}


enum AuctionStatus {
  SCHEDULED
  LIVE
  ENDED
  CANCELLED
}


enum Role {
  USER
  ADMIN
}